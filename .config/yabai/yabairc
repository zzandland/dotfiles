# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

#!/usr/bin/env bash

# ====== Variables =============================

gaps_top="24"
gaps_bottom="0"
gaps_left="0"
gaps_right="0"
gaps_inner="0"

normal_border_color="263238"
preselect_border_color="848c8d"

# ====== Tiling settings =======================

yabai -m config layout                      bsp

yabai -m config top_padding                 "${gaps_top}"
yabai -m config bottom_padding              "${gaps_bottom}"
yabai -m config left_padding                "${gaps_left}"
yabai -m config right_padding               "${gaps_right}"
yabai -m config window_gap                  "${gaps_inner}"

yabai -m config mouse_follows_focus         on
yabai -m config focus_follows_mouse         autofocus

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize

# yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               on

yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       1.0
yabai -m config split_ratio                 0.5
yabai -m config auto_balance                off

# ====== Border settings =======================

yabai -m config window_border               on
yabai -m config window_border_width         3
yabai -m config active_window_border_color  "0xE0${focused_border_color}"
yabai -m config insert_window_border_color  "0xE0${preselect_border_color}"
yabai -m config normal_window_border_color  "0x00${normal_border_color}"#

# ====== Application-specific rules ============

yabai -m config --space 1 layout float

yabai -m rule --add title='Preferences$' manage=off topmost=on
yabai -m rule --add title='KakaoTalk$' manage=off

# ====== Übersicht nibar update signals =====

yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"
yabai -m signal --add event=application_launched \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"
yabai -m signal --add event=application_terminated \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"
yabai -m signal --add event=window_created \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"
yabai -m signal --add event=window_destroyed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"

# if using multple displays, add an additional rule for "display_changed" event
yabai -m signal --add event=display_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"zbar-spaces-jsx\"'"
